// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebBaiGiang.Models;

#nullable disable

namespace WebBaiGiang.Migrations
{
    [DbContext(typeof(WebBaiGiangContext))]
    [Migration("20250626133411_updateNuoiDungg")]
    partial class updateNuoiDungg
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WebBaiGiang.Models.Bai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ChuongId")
                        .HasColumnType("int")
                        .HasColumnName("Chuong_Id");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Document")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("VideoUrl")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("VideoURL");

                    b.HasKey("Id")
                        .HasName("PK__Bai__3214EC079B0ED36A");

                    b.HasIndex("ChuongId");

                    b.ToTable("Bai", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.BaiGiang", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__BaiGiang__3214EC07CA07DEEA");

                    b.ToTable("BaiGiang", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.BaiTap", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ContentUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<double?>("MaxPoint")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id")
                        .HasName("PK__BaiTap__3214EC07210C887D");

                    b.ToTable("BaiTap", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.BaiTapLopHoc", b =>
                {
                    b.Property<int>("BaiTapId")
                        .HasColumnType("int");

                    b.Property<int>("LopHocId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayGiao")
                        .HasColumnType("datetime2");

                    b.HasKey("BaiTapId", "LopHocId");

                    b.HasIndex("LopHocId");

                    b.ToTable("BaiTapLopHocs");
                });

            modelBuilder.Entity("WebBaiGiang.Models.BinhLuan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiGiangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("NgayTao")
                        .HasColumnType("datetime");

                    b.Property<int>("NguoiDungId")
                        .HasColumnType("int");

                    b.Property<string>("NoiDung")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.HasKey("Id");

                    b.HasIndex("BaiGiangId");

                    b.HasIndex("NguoiDungId");

                    b.ToTable("BinhLuans");
                });

            modelBuilder.Entity("WebBaiGiang.Models.Chuong", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("BaiGiangId")
                        .HasColumnType("int")
                        .HasColumnName("BaiGiang_Id");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__Chuong__3214EC0750279F2B");

                    b.HasIndex("BaiGiangId");

                    b.ToTable("Chuong", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.GiangVienLopHoc", b =>
                {
                    b.Property<int>("IdGv")
                        .HasColumnType("int")
                        .HasColumnName("Id_GV");

                    b.Property<int>("IdClass")
                        .HasColumnType("int")
                        .HasColumnName("Id_Class");

                    b.Property<DateTime>("AssignedDate")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("RoleInClass")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("IdGv", "IdClass")
                        .HasName("PK__GiangVie__E8DC587B0AF328AF");

                    b.HasIndex("IdClass");

                    b.ToTable("GiangVien_LopHoc", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.HocPhan", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("Department_id");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__HocPhan__3214EC07520E5980");

                    b.HasIndex("DepartmentId");

                    b.ToTable("HocPhan", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.Khoa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__Khoa__3214EC07F7214B85");

                    b.ToTable("Khoa", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.LoiMoi", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClassId")
                        .HasColumnType("int")
                        .HasColumnName("Class_id");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("ExpiresTime")
                        .HasColumnType("datetime");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK__LoiMoi__3214EC076619C972");

                    b.HasIndex("ClassId");

                    b.ToTable("LoiMoi", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.LopHoc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("JoinCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("KhoaId")
                        .HasColumnType("int")
                        .HasColumnName("Khoa_id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Picture")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("SubjectsId")
                        .HasColumnType("int")
                        .HasColumnName("Subjects_id");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__LopHoc__3214EC0728E5A9A5");

                    b.HasIndex("KhoaId");

                    b.HasIndex("SubjectsId");

                    b.ToTable("LopHoc", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.LopHocBaiGiang", b =>
                {
                    b.Property<int>("LopHocId")
                        .HasColumnType("int");

                    b.Property<int>("BaiGiangId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AddedDate")
                        .HasColumnType("datetime");

                    b.HasKey("LopHocId", "BaiGiangId");

                    b.HasIndex("BaiGiangId");

                    b.ToTable("LopHocBaiGiangs");
                });

            modelBuilder.Entity("WebBaiGiang.Models.NguoiDung", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("ResetPasswordToken")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ResetTokenExpiry")
                        .HasColumnType("datetime");

                    b.Property<string>("Role")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK__NguoiDun__3214EC07E5A0C2B4");

                    b.HasIndex(new[] { "Email" }, "UQ__NguoiDun__A9D10534FB2EE92F")
                        .IsUnique();

                    b.ToTable("NguoiDung", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.NopBai", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("FeedBack")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("FileUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<double?>("Point")
                        .HasColumnType("float");

                    b.Property<DateTime>("SubmittedDate")
                        .HasColumnType("datetime");

                    b.Property<int>("TestId")
                        .HasColumnType("int")
                        .HasColumnName("Test_id");

                    b.Property<int>("UsersId")
                        .HasColumnType("int")
                        .HasColumnName("Users_id");

                    b.HasKey("Id")
                        .HasName("PK__NopBai__3214EC07EC907CDB");

                    b.HasIndex("TestId");

                    b.HasIndex("UsersId");

                    b.ToTable("NopBai", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.SinhVienLopHoc", b =>
                {
                    b.Property<int>("IdSv")
                        .HasColumnType("int")
                        .HasColumnName("Id_SV");

                    b.Property<int>("IdClass")
                        .HasColumnType("int")
                        .HasColumnName("Id_Class");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<DateTime>("JoinDate")
                        .HasColumnType("datetime");

                    b.HasKey("IdSv", "IdClass")
                        .HasName("PK__SinhVien__E8DC78F0586635CB");

                    b.HasIndex("IdClass");

                    b.ToTable("SinhVien_LopHoc", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.TaiNguyen", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("BaiGiangId")
                        .HasColumnType("int");

                    b.Property<int?>("BaiId")
                        .HasColumnType("int");

                    b.Property<byte[]>("Data")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Loai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Url")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.HasKey("Id");

                    b.HasIndex("BaiGiangId");

                    b.HasIndex("BaiId");

                    b.ToTable("TaiNguyen", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.ThongTinWeb", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreatedDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FacebookLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("InstagramLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("LogoUrl")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("PhoneLienHe")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TenTruong")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UpdateBy")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime");

                    b.Property<string>("YoutubeLink")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.HasKey("Id")
                        .HasName("PK__ThongTin__3214EC073CFA3B97");

                    b.ToTable("ThongTinWeb", (string)null);
                });

            modelBuilder.Entity("WebBaiGiang.Models.Bai", b =>
                {
                    b.HasOne("WebBaiGiang.Models.Chuong", "Chuong")
                        .WithMany("Bais")
                        .HasForeignKey("ChuongId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Bai_Chuong");

                    b.Navigation("Chuong");
                });

            modelBuilder.Entity("WebBaiGiang.Models.BaiTapLopHoc", b =>
                {
                    b.HasOne("WebBaiGiang.Models.BaiTap", "BaiTap")
                        .WithMany("BaiTapLopHocs")
                        .HasForeignKey("BaiTapId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBaiGiang.Models.LopHoc", "LopHoc")
                        .WithMany("BaiTapLopHocs")
                        .HasForeignKey("LopHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiTap");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("WebBaiGiang.Models.BinhLuan", b =>
                {
                    b.HasOne("WebBaiGiang.Models.BaiGiang", "BaiGiang")
                        .WithMany("BinhLuans")
                        .HasForeignKey("BaiGiangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBaiGiang.Models.NguoiDung", "NguoiDung")
                        .WithMany("BinhLuans")
                        .HasForeignKey("NguoiDungId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("BaiGiang");

                    b.Navigation("NguoiDung");
                });

            modelBuilder.Entity("WebBaiGiang.Models.Chuong", b =>
                {
                    b.HasOne("WebBaiGiang.Models.BaiGiang", "BaiGiang")
                        .WithMany("Chuongs")
                        .HasForeignKey("BaiGiangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Chuong_BaiGiang");

                    b.Navigation("BaiGiang");
                });

            modelBuilder.Entity("WebBaiGiang.Models.GiangVienLopHoc", b =>
                {
                    b.HasOne("WebBaiGiang.Models.LopHoc", "IdClassNavigation")
                        .WithMany("GiangVienLopHocs")
                        .HasForeignKey("IdClass")
                        .IsRequired()
                        .HasConstraintName("FK__GiangVien__Id_Cl__48CFD27E");

                    b.HasOne("WebBaiGiang.Models.NguoiDung", "IdGvNavigation")
                        .WithMany("GiangVienLopHocs")
                        .HasForeignKey("IdGv")
                        .IsRequired()
                        .HasConstraintName("FK__GiangVien__Id_GV__47DBAE45");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdGvNavigation");
                });

            modelBuilder.Entity("WebBaiGiang.Models.HocPhan", b =>
                {
                    b.HasOne("WebBaiGiang.Models.Khoa", "Department")
                        .WithMany("HocPhans")
                        .HasForeignKey("DepartmentId")
                        .HasConstraintName("FK__HocPhan__Departm__3D5E1FD2");

                    b.Navigation("Department");
                });

            modelBuilder.Entity("WebBaiGiang.Models.LoiMoi", b =>
                {
                    b.HasOne("WebBaiGiang.Models.LopHoc", "Class")
                        .WithMany("LoiMois")
                        .HasForeignKey("ClassId")
                        .IsRequired()
                        .HasConstraintName("FK__LoiMoi__Class_id__4CA06362");

                    b.Navigation("Class");
                });

            modelBuilder.Entity("WebBaiGiang.Models.LopHoc", b =>
                {
                    b.HasOne("WebBaiGiang.Models.Khoa", "Khoa")
                        .WithMany("LopHocs")
                        .HasForeignKey("KhoaId")
                        .IsRequired()
                        .HasConstraintName("FK_LopHoc_Khoa");

                    b.HasOne("WebBaiGiang.Models.HocPhan", "Subjects")
                        .WithMany("LopHocs")
                        .HasForeignKey("SubjectsId")
                        .IsRequired()
                        .HasConstraintName("FK__LopHoc__Subjects__403A8C7D");

                    b.Navigation("Khoa");

                    b.Navigation("Subjects");
                });

            modelBuilder.Entity("WebBaiGiang.Models.LopHocBaiGiang", b =>
                {
                    b.HasOne("WebBaiGiang.Models.BaiGiang", "BaiGiang")
                        .WithMany("LopHocBaiGiangs")
                        .HasForeignKey("BaiGiangId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WebBaiGiang.Models.LopHoc", "LopHoc")
                        .WithMany("LopHocBaiGiangs")
                        .HasForeignKey("LopHocId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BaiGiang");

                    b.Navigation("LopHoc");
                });

            modelBuilder.Entity("WebBaiGiang.Models.NopBai", b =>
                {
                    b.HasOne("WebBaiGiang.Models.BaiTap", "Test")
                        .WithMany("NopBais")
                        .HasForeignKey("TestId")
                        .IsRequired()
                        .HasConstraintName("FK__NopBai__Test_id__5535A963");

                    b.HasOne("WebBaiGiang.Models.NguoiDung", "Users")
                        .WithMany("NopBais")
                        .HasForeignKey("UsersId")
                        .IsRequired()
                        .HasConstraintName("FK__NopBai__Users_id__5629CD9C");

                    b.Navigation("Test");

                    b.Navigation("Users");
                });

            modelBuilder.Entity("WebBaiGiang.Models.SinhVienLopHoc", b =>
                {
                    b.HasOne("WebBaiGiang.Models.LopHoc", "IdClassNavigation")
                        .WithMany("SinhVienLopHocs")
                        .HasForeignKey("IdClass")
                        .IsRequired()
                        .HasConstraintName("FK__SinhVien___Id_Cl__440B1D61");

                    b.HasOne("WebBaiGiang.Models.NguoiDung", "IdSvNavigation")
                        .WithMany("SinhVienLopHocs")
                        .HasForeignKey("IdSv")
                        .IsRequired()
                        .HasConstraintName("FK__SinhVien___Id_SV__4316F928");

                    b.Navigation("IdClassNavigation");

                    b.Navigation("IdSvNavigation");
                });

            modelBuilder.Entity("WebBaiGiang.Models.TaiNguyen", b =>
                {
                    b.HasOne("WebBaiGiang.Models.BaiGiang", "BaiGiang")
                        .WithMany("TaiNguyens")
                        .HasForeignKey("BaiGiangId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("WebBaiGiang.Models.Bai", "Bai")
                        .WithMany("TaiNguyens")
                        .HasForeignKey("BaiId")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Bai");

                    b.Navigation("BaiGiang");
                });

            modelBuilder.Entity("WebBaiGiang.Models.Bai", b =>
                {
                    b.Navigation("TaiNguyens");
                });

            modelBuilder.Entity("WebBaiGiang.Models.BaiGiang", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("Chuongs");

                    b.Navigation("LopHocBaiGiangs");

                    b.Navigation("TaiNguyens");
                });

            modelBuilder.Entity("WebBaiGiang.Models.BaiTap", b =>
                {
                    b.Navigation("BaiTapLopHocs");

                    b.Navigation("NopBais");
                });

            modelBuilder.Entity("WebBaiGiang.Models.Chuong", b =>
                {
                    b.Navigation("Bais");
                });

            modelBuilder.Entity("WebBaiGiang.Models.HocPhan", b =>
                {
                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("WebBaiGiang.Models.Khoa", b =>
                {
                    b.Navigation("HocPhans");

                    b.Navigation("LopHocs");
                });

            modelBuilder.Entity("WebBaiGiang.Models.LopHoc", b =>
                {
                    b.Navigation("BaiTapLopHocs");

                    b.Navigation("GiangVienLopHocs");

                    b.Navigation("LoiMois");

                    b.Navigation("LopHocBaiGiangs");

                    b.Navigation("SinhVienLopHocs");
                });

            modelBuilder.Entity("WebBaiGiang.Models.NguoiDung", b =>
                {
                    b.Navigation("BinhLuans");

                    b.Navigation("GiangVienLopHocs");

                    b.Navigation("NopBais");

                    b.Navigation("SinhVienLopHocs");
                });
#pragma warning restore 612, 618
        }
    }
}
