@{

    var avatar = User.FindFirst("Avatar")?.Value;
    var name = User.Identity?.Name ?? "Admin";
    var defaultAvatarPath = "/img/default-avatar.png"; // Đường dẫn mặc định đến avatar

}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Trang quản trị</title>
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    @* <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css"> *@

    <style>
        :root {
            --header-height: 60px; 
            --sidebar-width: 250px; 
            --sidebar-bg: #212529; 
            --sidebar-color: rgba(255, 255, 255, 0.85); /* Màu chữ sidebar */
            --sidebar-hover-bg: #343a40; /* Màu nền hover sidebar */
            --sidebar-active-bg: #0d6efd; /* Màu nền active sidebar (Bootstrap primary) */
            --header-bg: linear-gradient(to right, #007bff, #0056b3); /* Gradient cho header */
            --text-shadow: 1px 1px 2px rgba(0,0,0,0.3); 
        }

        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background-color: #f8f9fa; /* Nền nhẹ cho toàn bộ trang */
        }

        /* Header */
        .header-top {
            height: var(--header-height);
            background: var(--header-bg);
            color: white;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 1rem;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.2);
            position: sticky; /* Giúp header cố định khi cuộn */
            top: 0;
            z-index: 1030;
        }

        .header-top .admin-title {
            font-size: 1.75rem; /* Tăng kích thước tiêu đề */
            font-weight: 700;
            text-shadow: var(--text-shadow); /* Thêm đổ bóng chữ */
        }

        /* Avatar and User Dropdown */
        .avatar-img {
            width: 38px; /* Tăng kích thước avatar */
            height: 38px;
            border-radius: 50%;
            object-fit: cover;
            border: 2px solid rgba(255, 255, 255, 0.5); /* Viền nhẹ cho avatar */
        }

        .avatar-button {
            border: none;
            background: none;
            cursor: pointer;
            color: white; /* Đảm bảo màu chữ hiển thị */
            padding: 0.25rem 0.5rem;
            border-radius: 0.375rem;
            transition: background-color 0.2s ease;
        }
        .avatar-button:hover {
            background-color: rgba(255, 255, 255, 0.1);
        }

        .dropdown-menu-end {
            right: 0;
            left: auto;
            min-width: 150px; /* Tăng chiều rộng menu dropdown */
            box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);
            border-radius: 0.5rem;
        }
        .dropdown-menu-end .dropdown-header {
            font-weight: bold;
            color: #495057;
            padding-bottom: 0.5rem;
            border-bottom: 1px solid #dee2e6;
            margin-bottom: 0.5rem;
        }

        /* Main Layout */
        .main-wrapper {
            display: flex;
            min-height: calc(100vh - var(--header-height)); /* Điều chỉnh chiều cao cho phù hợp */
        }

        /* Sidebar */
        .sidebar {
            width: var(--sidebar-width);
            background-color: var(--sidebar-bg);
            color: var(--sidebar-color);
            padding: 1.5rem 0.5rem; /* Padding trên dưới rộng hơn */
            box-shadow: 2px 0 8px rgba(0, 0, 0, 0.15);
            transition: transform 0.3s ease-in-out; /* Hiệu ứng đóng mở */
            flex-shrink: 0; /* Ngăn sidebar bị co lại */
            position: sticky; /* Giúp sidebar cố định khi cuộn */
            top: var(--header-height);
            align-self: flex-start; /* Để sidebar bắt đầu từ trên cùng của flex container */
            overflow-y: auto; /* Cho phép cuộn nếu nội dung sidebar dài */
        }

        .sidebar.collapsed {
            transform: translateX(-var(--sidebar-width)); /* Ẩn hoàn toàn sidebar */
        }

        .sidebar .sidebar-title {
            font-size: 1.5rem;
            font-weight: bold;
            color: white;
            text-align: center;
            margin-bottom: 2rem; /* Khoảng cách với menu */
            text-shadow: var(--text-shadow);
        }

        .sidebar .nav-link {
            color: var(--sidebar-color);
            padding: 0.75rem 1rem;
            margin-bottom: 0.5rem;
            border-radius: 0.375rem;
            transition: background-color 0.2s ease, color 0.2s ease;
            display: flex; /* Dùng flex để căn giữa icon và text */
            align-items: center;
            gap: 0.75rem; /* Khoảng cách giữa icon và text */
        }
        .sidebar .nav-link:hover {
            background-color: var(--sidebar-hover-bg);
            color: white;
        }
        .sidebar .nav-link.active { /* Để đánh dấu mục đang hoạt động */
            background-color: var(--sidebar-active-bg);
            color: white;
            font-weight: 600;
        }

        /* Main Content Area */
        .content-area {
            flex-grow: 1;
            padding: 1.5rem; /* Tăng padding tổng thể */
            background-color: #ffffff; /* Nền trắng cho nội dung chính */
        }

        /* Footer */
        .admin-footer {
            background-color: #343a40;
            color: white;
            padding: 1rem;
            text-align: center;
            font-size: 0.9rem;
            margin-top: auto; /* Đẩy footer xuống dưới cùng */
        }

        /* Responsive adjustments */
        .media (max-width: 767.98px) {
            .sidebar {
                position: fixed;
                top: var(--header-height);
                left: 0;
                height: calc(100vh - var(--header-height));
                z-index: 1020;
                transform: translateX(-100%); /* Mặc định ẩn trên mobile */
                width: 220px; /* Chiều rộng nhỏ hơn cho mobile */
            }
            .sidebar.show {
                transform: translateX(0); /* Hiển thị sidebar */
            }
            .main-wrapper {
                flex-direction: column;
            }
            .content-area {
                width: 100%;
            }
            .header-top .admin-title {
                font-size: 1.4rem; /* Giảm kích thước tiêu đề trên mobile */
            }
            .header-top .d-md-none {
                display: block !important; /* Đảm bảo nút toggle luôn hiện trên mobile */
            }
        }
        .media (min-width: 768px) {
            .sidebar {
                transform: translateX(0) !important; /* Luôn hiện trên desktop */
            }
            .header-top .d-md-none {
                display: none !important; /* Ẩn nút toggle trên desktop */
            }
        }
    </style>
</head>
<body>
    <div class="header-top">
        <div class="d-flex align-items-center gap-3">
            <button class="btn btn-dark d-md-none" type="button" id="sidebarToggle">
                <i class="bi bi-list fs-5"></i>
            </button>
            <div class="admin-title">🎓 Quản trị Admin</div>
        </div>
        <div class="dropdown">
            <button class="avatar-button" type="button" id="dropdownUser" data-bs-toggle="dropdown" aria-expanded="false">
                @if (!string.IsNullOrEmpty(avatar))
                {
                    <img src="@Url.Content(avatar)" alt="Avatar" class="avatar-img" />
                }
                else
                {
                    <img src="@Url.Content(defaultAvatarPath)" alt="Default Avatar" class="avatar-img" />
                }
                <span class="ms-2 d-none d-sm-inline">@name</span> @* Ẩn tên trên màn hình siêu nhỏ *@
                <i class="bi bi-caret-down-fill ms-1"></i>
            </button>
            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="dropdownUser">
                <li><h6 class="dropdown-header">Xin chào, @name!</h6></li>
                <li><hr class="dropdown-divider" /></li>
                <li><a class="dropdown-item" href="@Url.Action("Profile", "Account")"><i class="bi bi-person-circle me-2"></i> Quản lý tài khoản</a></li>
                <li><a class="dropdown-item" href="@Url.Action("ChangePassword", "Account")"><i class="bi bi-key me-2"></i> Đổi mật khẩu</a></li>
                <li><hr class="dropdown-divider" /></li>
                <li><a class="dropdown-item text-danger" href="#" onclick="return confirmLogout();"><i class="bi bi-box-arrow-right me-2"></i> Đăng xuất</a></li>
            </ul>
        </div>
    </div>

    <div class="main-wrapper">
        <div class="sidebar" id="sidebar">
            <h4 class="sidebar-title">Bảng điều khiển</h4>
            <ul class="nav flex-column">
                <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/Home") ? "active" : "")" href="@Url.Action("Index", "Home", new { area = "Admin" })">
                        <i class="bi bi-speedometer2"></i> Tổng quan
                    </a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/Khoa") ? "active" : "")" href="@Url.Action("Khoa", "Khoa", new { area = "Admin" })">
                        <i class="bi bi-diagram-3"></i> Quản lý Khoa
                    </a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/HocPhan") ? "active" : "")" href="@Url.Action("HocPhan", "HocPhan", new { area = "Admin" })">
                        <i class="bi bi-journals"></i> Quản lý Học phần
                    </a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/GiaoVien") ? "active" : "")" href="@Url.Action("Index", "GiaoVien", new { area = "Admin" })">
                        <i class="bi bi-person-badge"></i> Quản lý Giáo viên
                    </a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/HocSinh") ? "active" : "")" href="@Url.Action("Index", "HocSinh", new { area = "Admin" })">
                        <i class="bi bi-people-fill"></i> Quản lý Học sinh
                    </a>
                </li>
                 <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/ThongKe") ? "active" : "")" href="@Url.Action("Index", "ThongKe", new { area = "Admin" })"> 
                        <i class="bi bi-bar-chart-line"></i> Thống kê báo cáo
                    </a>
                </li>
                <li class="nav-item mb-2">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/Admin/WebConfig") ? "active" : "")" href="@Url.Action("Index", "WebConfig", new { area = "Admin" })"> 
                        <i class="bi bi-gear"></i> Quản lý trang web
                    </a>
                </li>
            </ul>
        </div>

        <div class="content-area">
            @RenderBody()
        </div>
    </div>

    <footer class="admin-footer">
        © 2025 Quản trị Admin. All rights reserved.
    </footer>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        function confirmLogout() {
            if (confirm("Bạn có chắc chắn muốn đăng xuất không?")) {
                // Sử dụng Url.Action để tạo URL đăng xuất an toàn hơn
                window.location.href = '@Url.Action("Logout", "Account", new { area = "" })';
                return false;
            }
            return false;
        }

        document.addEventListener('DOMContentLoaded', function() {
            const sidebarToggle = document.getElementById('sidebarToggle');
            const sidebar = document.getElementById('sidebar');

            if (sidebarToggle && sidebar) {
                sidebarToggle.addEventListener('click', function() {
                    sidebar.classList.toggle('show'); // Dùng class 'show' để điều khiển visibility
                });

                // Tự động đóng sidebar khi click ra ngoài trên màn hình nhỏ (tùy chọn)
                document.addEventListener('click', function(event) {
                    if (window.innerWidth < 768 && sidebar.classList.contains('show') && !sidebar.contains(event.target) && !sidebarToggle.contains(event.target)) {
                        sidebar.classList.remove('show');
                    }
                });
            }
        });
    </script>
    @RenderSection("Scripts", required: false)
</body>
</html>