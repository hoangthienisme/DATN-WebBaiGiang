@model IEnumerable<WebBaiGiang.Models.Khoa>

@{
    ViewData["Title"] = "Quản lý Khoa";
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAdmin.cshtml";
}

<style>
    /* Custom Styles for Khoa Management View */
    .card-header-custom {
    background: linear-gradient(45deg, #007bff, #0056b3); /* Gradient header for card */
    color: white;
    border-bottom: none;
    padding: 1rem 1.5rem;
    border-radius: 0.5rem 0.5rem 0 0; /* Rounded top corners */
    }

    .table th, .table td {
    white-space: nowrap; /* Prevent text wrapping in table cells */
    overflow: hidden;
    text-overflow: ellipsis; /* Add ellipsis for overflowing text */
    vertical-align: middle; /* Vertically align content in cells */
    }

    .table th:first-child, .table td:first-child {
    width: 10%; /* Set width for ID column */
    text-align: center;
    }

    .table th:nth-child(2), .table td:nth-child(2) {
    width: 25%; /* Set width for Name column */
    }

    .table th:nth-child(3), .table td:nth-child(3) {
    /* Description column - allow more space */
    width: 45%;
    white-space: normal; /* Allow description to wrap */
    }

    .table th:last-child, .table td:last-child {
    width: 20%; /* Set width for Actions column */
    text-align: center;
    }

    .action-buttons .btn {
    margin: 0 0.25rem; /* Spacing between action buttons */
    min-width: 70px; /* Ensure buttons have a minimum width */
    }

    .search-input-group .form-control {
    border-radius: 0.25rem; /* Slightly rounded corners for search input */
    }
</style>

<div class="card shadow-lg border-0 rounded-lg">
    <div class="card-header card-header-custom">
        <h3 class="mb-0 fw-bold">@ViewData["Title"]</h3>
    </div>
    <div class="card-body p-4">
        <div class="d-flex flex-column flex-md-row justify-content-between align-items-md-center mb-4">
            <form class="d-flex mb-3 mb-md-0 search-input-group" method="get" asp-action="Index" asp-controller="Khoa" asp-area="Admin">
                <input type="text" name="search" class="form-control me-2" placeholder="Tìm kiếm khoa..." value="@ViewBag.CurrentSearch" />
                <button type="submit" class="btn btn-outline-primary">
                    <i class="bi bi-search me-1"></i> Tìm
                </button>
            </form>

            <a class="btn btn-success" href="@Url.Action("Create", "Khoa", new { area = "Admin" })">
                <i class="bi bi-plus-circle-fill me-2"></i> Thêm mới Khoa
            </a>
        </div>

        @if (TempData["SuccessMessage"] != null)
        {
            <div class="alert alert-success alert-dismissible fade show" role="alert">
                @TempData["SuccessMessage"]
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        }

        <div class="table-responsive">
            <table class="table table-bordered table-hover align-middle">
                <thead class="table-dark text-center">
                    <tr>
                        <th>Mã</th>
                        <th>Tên Khoa</th>
                        <th>Mô tả</th>
                        <th>Trạng thái</th>
                        <th>Tác vụ</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        foreach (var khoa in Model)
                        {
                            <tr data-khoa-id="@khoa.Id">
                                <td>@khoa.Id</td>
                                <td>@khoa.Name</td>
                                <td>@(string.IsNullOrEmpty(khoa.Description) ? "Không có mô tả" : khoa.Description)</td>
                                <td class="text-center status-badge">
                                    <span class="badge @(khoa.IsActive ? "bg-success" : "bg-danger")">
                                        @(khoa.IsActive ? "Đang hoạt động" : "Đã ẩn")
                                    </span>
                                </td>
                                <td class="text-center action-buttons">
                                    <a class="btn btn-sm btn-primary"
                                       href="@Url.Action("Edit", "Khoa", new { id = khoa.Id, area = "Admin" })">
                                        <i class="bi bi-pencil-square me-1"></i> Sửa
                                    </a>

                                    <button type="button"
                                            class="btn btn-sm @(khoa.IsActive ? "btn-warning" : "btn-info") toggle-khoa-status"
                                            data-id="@khoa.Id"
                                            data-isactive="@khoa.IsActive.ToString().ToLower()"
                                            title="@(khoa.IsActive ? "Ẩn khoa này" : "Kích hoạt lại khoa")">
                                        <i class="bi @(khoa.IsActive ? "bi-eye-slash" : "bi-eye") me-1"></i>
                                        @(khoa.IsActive ? "Ẩn" : "Kích hoạt")
                                    </button>
                                </td>
                            </tr>
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center text-muted py-4">Không có khoa nào được tìm thấy.</td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>


<script>
    $(document).ready(function () {
        $('.toggle-khoa-status').click(function () {
            const button = $(this);
            const id = button.data('id');
            const isActive = button.data('isactive') === true || button.data('isactive') === "true";

            const newIsActive = !isActive;
            const confirmMsg = `Bạn có chắc chắn muốn ${newIsActive ? "kích hoạt" : "ẩn"} khoa này không?`;

            if (!confirm(confirmMsg)) return;

            $.ajax({
                url: '@Url.Action("ToggleActiveStatus", "Khoa", new { area = "Admin" })',
                type: 'POST',
                data: {
                    id: id,
                    isActive: newIsActive
                },
                success: function (response) {
                    if (response.success) {
                        const row = $(`tr[data-khoa-id='${id}']`);
                        const badgeCell = row.find(".status-badge span");
                        const icon = button.find('i');

                        // Update trạng thái nút
                        button.data('isactive', newIsActive.toString());
                        button.toggleClass("btn-warning btn-info");
                        button.html(`<i class="bi ${newIsActive ? "bi-eye-slash" : "bi-eye"} me-1"></i> ${newIsActive ? "Ẩn" : "Kích hoạt"}`);

                        // Update badge trạng thái
                        badgeCell
                            .removeClass("bg-success bg-danger")
                            .addClass(newIsActive ? "bg-success" : "bg-danger")
                            .text(newIsActive ? "Đang hoạt động" : "Đã ẩn");
                    } else {
                        alert("Thao tác thất bại: " + (response.message || "Có lỗi xảy ra."));
                    }
                },
                error: function () {
                    alert("Đã xảy ra lỗi khi gửi yêu cầu. Vui lòng thử lại.");
                }
            });
        });
    });
</script>
