@using WebBaiGiang.ViewModel
@inject WebBaiGiang.Models.WebBaiGiangContext _context
@{
     ViewData["Title"] = "Giảng viên"; 
    var avatar = User.FindFirst("Avatar")?.Value;
    var name = User.Identity?.Name ?? "Admin";
    var defaultAvatarPath = "/img/default-avatar.jpg";
    var thongTin = _context.ThongTinWebs.FirstOrDefault();
    Layout = null;
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <title>Giảng viên - @ViewData["Title"]</title> @* Đã điều chỉnh cách hiển thị Title *@

    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.css">
    <!-- Cần có Bootstrap JS -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <link href="~/css/giangvien.css" rel="stylesheet" />
</head>
<body>
    <div class="header-top">
        <div class="navbar-logo">
            <a href="@Url.Action("Index", "Home")" class="logo d-flex align-items-center me-auto">
                @if (!string.IsNullOrEmpty(thongTin?.LogoUrl))
                {
                    <img src="@thongTin.LogoUrl" alt="Logo" class="img-fluid rounded" style="height: 70px;" />

                }
                else
                {
                    <h1 class="sitename">Logo</h1>
                }
            </a>
        </div>

        <div class="custom-dropdown">
            <button class="avatar-button" type="button" id="dropdownUserToggle">
                @if (!string.IsNullOrEmpty(avatar))
                {
                    <img src="@Url.Content(avatar)" alt="Avatar" class="avatar-img" />
                }
                else
                {
                    <img src="@Url.Content(defaultAvatarPath)" alt="Default Avatar" class="avatar-img" />
                }
                <span class="ms-1 d-none d-sm-inline">@name</span>
            </button>
            <ul class="custom-dropdown-menu" id="dropdownUserMenu">
                <li><a class="custom-dropdown-item" href="@Url.Action("Profile", "Account", new { area = "" })"><i class="bi bi-person-circle me-2"></i> Tài khoản</a></li>
                <li><a class="custom-dropdown-item text-danger" id="logoutLink" href="#"><i class="bi bi-box-arrow-right me-2"></i> Đăng xuất</a></li>
            </ul>
        </div>
    </div>

    <div class="main-wrapper">
        <div class="sidebar" id="sidebar">
            <ul class="nav flex-column">
                <li class="nav-item">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/GiangVien/Courses") ? "active" : "")" href="@Url.Action("Courses", "GiangVien", new { area = "" })">
                        <i class="bi bi-camera-video"></i> Khóa học của tôi
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/GiangVien/BaiGiang") ? "active" : "")" href="@Url.Action("BaiGiang", "GiangVien", new { area = "" })">
                        <i class="bi bi-journal-text"></i> Quản lý bài giảng
                    </a>
                </li>
                <li class="nav-item">
                    <a class="nav-link @(Context.Request.Path.Value.Contains("/GiangVien/ArchivedCourses") ? "active" : "")" href="@Url.Action("ArchivedCourses", "GiangVien", new { area = "" })">
                        <i class="bi bi-bar-chart-line"></i> Lưu trữ lớp học 
                    </a>
                </li>
            </ul>
        </div>

        <div class="content-area">
            @RenderBody()
            @await Html.PartialAsync("_Toast")
        </div>
    </div>


    @await Html.PartialAsync("_ConfirmModal", new ConfirmModalViewModel
{
    ModalId = "logoutModal",
    Message = "Bạn có muốn đăng xuất không?",
    ActionUrl = Url.Action("Logout", "Account")
})

    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const dropdownToggle = document.getElementById('dropdownUserToggle');
            const dropdownMenu = document.getElementById('dropdownUserMenu');
            const logoutLink = document.getElementById('logoutLink');
            const logoutModal = document.getElementById('logoutModal');
            const confirmBtn = document.getElementById('confirmLogoutBtn');
            const cancelBtn = document.getElementById('cancelLogoutBtn');

            // Toggle dropdown
            if (dropdownToggle && dropdownMenu) {
                dropdownToggle.addEventListener('click', function (e) {
                    dropdownMenu.classList.toggle('show');
                    e.stopPropagation();
                });

                document.addEventListener('click', function (e) {
                    if (!dropdownToggle.contains(e.target) && !dropdownMenu.contains(e.target)) {
                        dropdownMenu.classList.remove('show');
                    }
                });
            }

            // Mở modal xác nhận đăng xuất
            if (logoutLink && logoutModal) {
                logoutLink.addEventListener('click', function (e) {
                    e.preventDefault();
                    logoutModal.classList.add('show');
                });
            }

            // Đóng modal khi bấm nút hủy
            if (cancelBtn && logoutModal) {
                cancelBtn.addEventListener('click', function () {
                    logoutModal.classList.remove('show');
                });
            }

            // Đóng modal nếu click ra ngoài vùng modal
            if (logoutModal) {
                logoutModal.addEventListener('click', function (e) {
                    if (e.target === logoutModal) {
                        logoutModal.classList.remove('show');
                    }
                });
            }
        });
    </script>

    @RenderSection("Scripts", required: false)
</body>
</html>