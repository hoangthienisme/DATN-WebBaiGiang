@using WebBaiGiang.ViewModel
@model PhanTrang<WebBaiGiang.Models.LopHoc>

@{
    Layout = "~/Views/Shared/_LayoutGiangvien.cshtml";
}

<link href="~/css/courses.css" rel="stylesheet" />
<link href="~/css/pagination.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    .course-dropdown {
        position: absolute;
        top: 0;
        right: 0;
        margin: 8px;
        z-index: 1000;
    }

    .dropdown-toggle {
        background: none;
        border: none;
        color: white;
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0;
    }

    .dropdown-menu {
        display: none;
        position: absolute;
        top: 100%;
        right: 0;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        min-width: 120px;
        z-index: 1001;
    }

        .dropdown-menu.show {
            display: block;
        }

    .dropdown-item {
        padding: 8px 12px;
        color: #333;
        font-size: 14px;
        text-decoration: none;
        display: block;
        width: 100%;
    }

    .dropdown-item-hide {
        color: red;
    }
</style>

<div class="conTent">
    <h3>Khoá học</h3>
</div>

@await Html.PartialAsync("_Toast")

<div class="search-filter">
    <form asp-action="Courses" method="get" class="search-input-wrapper">
        <img src="~/img/loupe.png" class="search-icon" />
        <input type="text" name="search" value="@ViewBag.Search" placeholder="Tìm khóa học..." class="search-input-courses" />
    </form>
    <button class="create-course-button" onclick="location.href='@Url.Action("CreateCourses", "GiangVien")'">Tạo khóa học</button>
</div>

<div class="container">
    <div class="courses-wrapper">
        @if (Model != null && Model.Any())
        {
            foreach (var course in Model)
            {
                var joinLink = Url.Action("Join", "Courses", new { code = course.JoinCode }, Context.Request.Scheme);
                <div class="course-card position-relative">
                    <div class="course-dropdown">
                        <button class="btn btn-link text-white p-0" type="button" onclick="toggleCourseDropdown(this)">
                            <i class="bi bi-three-dots-vertical fs-5"></i>
                        </button>

                        <div class="dropdown-menu">
                            <a class="dropdown-item" asp-controller="Courses" asp-action="DetailCourses" asp-route-id="@course.Id">Vào lớp</a>
                            <a class="dropdown-item" href="javascript:void(0)" onclick="copyToClipboard('@joinLink')">Chia sẻ lớp học</a>
                            <a class="dropdown-item" asp-action="EditCourses" asp-route-id="@course.Id">Chỉnh sửa</a>

                            <form asp-action="ArchiveCourse" asp-controller="GiangVien" method="post"
                                  onsubmit="return confirm('Bạn có chắc muốn lưu trữ khóa học này?')" style="margin: 0;">
                                <input type="hidden" name="id" value="@course.Id" />
                                <button type="submit" class="dropdown-item dropdown-item-hide">Lưu trữ</button>
                            </form>
                        </div>
                    </div>

                    <div class="course-image">
                        <img src="@course.Picture" alt="Ảnh bìa khóa học" onerror="this.src='/img/default-course.jpg'" />
                    </div>
                    <div class="course-content">
                        <h4>@course.Name</h4>
                        @Html.Raw(course.Description)
                    </div>
                </div>
            }
        }
        else
        {
            if (!string.IsNullOrEmpty(ViewBag.Search))
            {
                <p>Không tìm thấy khóa học với từ khóa "<strong>@ViewBag.Search</strong>".</p>
            }
            else
            {
                <p>Không có khóa học nào.</p>
            }
        }
    </div>

    <div class="pagination">
        @if (Model.TotalPages > 1)
        {
            <ul class="pagination-list">
                @if (Model.HasPreviousPage)
                {
                    <li><a href="@Url.Action("Courses", new { page = Model.PageIndex - 1, search = ViewBag.Search })">← Trước</a></li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageIndex)
                    {
                        <li class="active">@i</li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("Courses", new { page = i, search = ViewBag.Search })">@i</a></li>
                    }
                }
                @if (Model.HasNextPage)
                {
                    <li><a href="@Url.Action("Courses", new { page = Model.PageIndex + 1, search = ViewBag.Search })">Sau →</a></li>
                }
            </ul>
        }
    </div>
</div>

<script>
    function toggleCourseDropdown(button) {
        const menu = button.parentElement.querySelector('.dropdown-menu');
        const isShown = menu.classList.contains("show");

        document.querySelectorAll(".dropdown-menu.show").forEach(m => m.classList.remove("show"));

        if (!isShown) {
            menu.classList.add("show");
        }
    }

    document.addEventListener("click", function (e) {
        document.querySelectorAll(".dropdown-menu.show").forEach(menu => {
            if (!menu.contains(e.target) && !menu.previousElementSibling.contains(e.target)) {
                menu.classList.remove("show");
            }
        });
    });

    function copyToClipboard(link) {
        navigator.clipboard.writeText(link)
            .then(() => alert("Đã sao chép liên kết lớp học!"))
            .catch(err => alert("Không thể sao chép: " + err));
    }
</script>
