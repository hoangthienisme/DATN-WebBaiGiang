@model WebBaiGiang.ViewModel.BaiGiangCreateViewModel
@{
    Layout = null; // Hoặc Layout của bạn
    ViewData["Title"] = "Tạo bài giảng mới";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>


<div class="container mt-4">
    <h3>Tạo bài giảng mới</h3>

    <form asp-action="TaoBaiGiang" method="post" enctype="multipart/form-data">
        <div class="mb-3">
            <label asp-for="Title" class="form-label fw-bold">Tiêu đề bài giảng *</label>
            <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề bài giảng" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label fw-bold">Mô tả bài giảng</label>
            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Mô tả bài giảng"></textarea>
        </div>

        <div class="mb-3">
            <label asp-for="Attachment" class="form-label fw-bold">File bài giảng tổng thể (nếu có)</label>
            <input asp-for="Attachment" type="file" class="form-control" />
            <span asp-validation-for="Attachment" class="text-danger"></span>
        </div>

        <hr />
        <div class="mb-3">
            <label class="form-label fw-bold">Chọn lớp áp dụng</label>
            <div class="dropdown">
                <button class="btn btn-outline-secondary dropdown-toggle text-start" type="button" id="classDropdownBtn" data-bs-toggle="dropdown" aria-expanded="false">
                    <span id="selectedClassesText">Chưa có lớp nào được chọn...</span>
                </button>
                <ul class="dropdown-menu p-2" aria-labelledby="classDropdownBtn" style=" max-height: 200px; overflow-y: auto;">
                    @if (Model.AvailableClasses != null && Model.AvailableClasses.Any())
                    {
                        @foreach (var item in Model.AvailableClasses)
                        {
                            <li>
                                <div class="form-check">
                                    <input class="form-check-input class-checkbox" type="checkbox"
                                           value="@item.Value"
                                           id="classCheckbox_@item.Value"
                                           name="SelectedClassIds" @(Model.SelectedClassIds.Contains(int.Parse(item.Value)) ? "checked" : "")>
                                    <label class="form-check-label" for="classCheckbox_@item.Value">
                                        @item.Text
                                    </label>
                                </div>
                            </li>
                        }
                    }
                    else
                    {
                        <li><p class="text-muted ms-2">Không có lớp học nào khả dụng cho bạn.</p></li>
                    }
                </ul>
            </div>
        </div>
        <hr />

        <h4>Danh sách chương</h4>
        <div id="chapters-container">
            @* Khi tạo mới, ban đầu sẽ không có chương nào *@
        </div>

        <button type="button" class="btn btn-outline-success mb-4" onclick="addChapter()">+ Thêm chương</button>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Tạo bài giảng</button>
            <a href="@Url.Action("BaiGiang", "GiangVien")" class="btn btn-secondary">Hủy bỏ</a>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).ready(function() {
            // ... (phần code của bạn cho chương và bài học)

            // Cập nhật text hiển thị trên nút dropdown
            function updateDropdownButtonText() {
                const selectedOptions = $('.class-checkbox:checked');
                const selectedTextSpan = $('#selectedClassesText');

                if (selectedOptions.length === 0) {
                    selectedTextSpan.text('Chưa có lớp nào được chọn...');
                } else if (selectedOptions.length > 3) {
                    selectedTextSpan.text(selectedOptions.length + ' lớp đã chọn');
                } else {
                    const labels = [];
                    selectedOptions.each(function() {
                        labels.push($(this).next('label').text()); // Lấy text từ label đi kèm
                    });
                    selectedTextSpan.text(labels.join(', '));
                }
            }

            // Gọi hàm khi trang tải xong và khi checkbox thay đổi
            updateDropdownButtonText(); // Gọi lần đầu khi tải trang

            $('.class-checkbox').on('change', function() {
                updateDropdownButtonText();
            });

            // Ngăn không cho dropdown đóng khi click vào checkbox
            $('.dropdown-menu').on('click', function(e) {
                e.stopPropagation();
            });
        });
    </script>
}