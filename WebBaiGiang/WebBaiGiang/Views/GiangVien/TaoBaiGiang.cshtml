@model WebBaiGiang.ViewModel.BaiGiangCreateViewModel

@{
    Layout = null;
    ViewData["Title"] = "Tạo bài giảng mới";
}
<style>
    .ck-content img {
        max-width: 80% !important;
        height: auto;
        display: block;
        margin: 12px auto;
        border-radius: 6px;
        box-shadow: 0 1px 4px rgba(0, 0, 0, 0.1);
    }
</style>
<meta charset="utf-8" />
<!-- Bootstrap CSS -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />

<!-- Bootstrap Icons -->
<link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />

<!-- jQuery (khuyên dùng 3.5.1 nếu xài unobtrusive) -->
<script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>

<!-- Bootstrap JS -->
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<!-- jQuery Validate -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.12/jquery.validate.unobtrusive.min.js"></script>

<!-- CKEditor -->
<script src="https://cdn.ckeditor.com/ckeditor5/39.0.1/classic/ckeditor.js"></script>

<meta charset="utf-8" />
<a class="btn btn-outline-secondary btn-sm d-inline-flex align-items-center"
   href="@Url.Action("Courses", "GiangVien")"
   style="margin-left: 10px;">
    <i class="bi bi-arrow-left-circle me-1" style="font-size: 1.2rem;"></i>
    <span class="d-none d-md-inline"></span>
</a>

<div class="container mt-4">
    <h3>Tạo bài giảng mới</h3>

    <div class="progress mb-4">
        <div class="progress-bar" id="progressBar" role="progressbar" style="width: 33.33%;">Bước 1 / 3</div>
    </div>

    <form asp-action="TaoBaiGiang" method="post" enctype="multipart/form-data">
        <input type="hidden" name="returnUrl" value="@Context.Request.Query["returnUrl"]" />

        <!-- BƯỚC 1 -->
        <div id="step1" class="step">
            <div class="mb-3">
                <label asp-for="Title" class="form-label fw-bold">Tiêu đề *</label>
                <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề tài liệu" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>

            <div class="mb-3">
                <label asp-for="Description" class="form-label fw-bold">Mô tả (không bắt buộc)</label>
                <textarea asp-for="Description" class="form-control" id="description-editor" rows="3"></textarea>
            </div>


            <div class="mb-3">
                <label class="form-label fw-bold">Dành cho lớp</label>
                <div class="dropdown">
                    <button class="btn btn-outline-secondary dropdown-toggle text-start" type="button" id="classDropdownBtn" data-bs-toggle="dropdown" aria-expanded="false">
                        <span id="selectedClassesText">Chọn lớp...</span>
                    </button>
                    <ul class="dropdown-menu p-2" aria-labelledby="classDropdownBtn" style=" max-height: 200px; overflow-y: auto;">
                        @if (Model.AvailableClasses != null && Model.AvailableClasses.Any())
                        {
                            @foreach (var item in Model.AvailableClasses)
                            {
                                <li>
                                    <div class="form-check">
                                        <input class="form-check-input class-checkbox" type="checkbox"
                                               value="@item.Value"
                                               id="classCheckbox_@item.Value"
                                               name="SelectedClassIds" @(Model.SelectedClassIds != null && Model.SelectedClassIds.Contains(int.Parse(item.Value)) ? "checked" : "")>
                                        <label class="form-check-label" for="classCheckbox_@item.Value">
                                            @item.Text
                                        </label>
                                    </div>
                                </li>
                            }
                        }
                        else
                        {
                            <li><p class="text-muted ms-2">Không có lớp học nào khả dụng cho bạn.</p></li>
                        }
                    </ul>
                </div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Tải lên hình ảnh</label>
                <input asp-for="ImageFiles" type="file" class="form-control w-auto" multiple accept="image/*" onchange="previewFiles(this, 'imagePreview')" />
                <span asp-validation-for="ImageFiles" class="text-danger"></span>
                <div id="imagePreview" class="d-flex flex-wrap gap-3 mt-2"></div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Tải lên tài liệu</label>
                <input asp-for="DocumentFiles" type="file" class="form-control w-auto" multiple accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt" onchange="previewFiles(this, 'fileNamePreview')" />
                <span asp-validation-for="DocumentFiles" class="text-danger"></span>
                <div id="fileNamePreview" class="mt-2"></div>
            </div>

            <div class="mb-3">
                <label class="form-label fw-bold">Liên kết YouTube</label>
                <div id="youtube-links-container" class="d-flex flex-column gap-2">
                    @if (Model.YoutubeLinks != null && Model.YoutubeLinks.Any())
                    {
                        for (int i = 0; i < Model.YoutubeLinks.Count; i++)
                        {
                            <input type="url" name="YoutubeLinks" value="@Model.YoutubeLinks[i]" class="form-control" placeholder="https://www.youtube.com/watch?v=..." />
                        }
                    }
                    else
                    {
                        <input type="url" name="YoutubeLinks" class="form-control" placeholder="https://www.youtube.com/watch?v=..." />
                    }
                </div>

                <button type="button" class="btn btn-sm btn-outline-primary mt-2" onclick="addYoutubeLink()">+ Thêm liên kết</button>
            </div>
            <div class="form-group">
                <label for="HocPhanId">Chọn học phần</label>
                <select asp-for="HocPhanId" asp-items="Model.AvailableHocPhans" class="form-control"></select>
                <span asp-validation-for="HocPhanId" class="text-danger"></span>
            </div>
        </div>
        <!-- BƯỚC 2: Chương -->
        <div id="step2" class="step" style="display:none;">
            <h5>Danh sách chương</h5>
            <div id="chapters-container"></div>
            <button type="button" class="btn btn-outline-primary mt-3" onclick="addChapter()">+ Thêm chương</button>
        </div>

        <!-- BƯỚC 3: Bài học -->
        <div id="step3" class="step" style="display:none;">
            <h5>Bài học theo từng chương</h5>
            <div id="lessons-wrapper"></div>
        </div>

        <div class="step-controls mt-4 d-flex justify-content-between">
            <button type="button" class="btn btn-secondary" onclick="prevStep()" id="btn-prev" style="display: none;">Quay lại</button>
            <button type="button" class="btn btn-primary" onclick="nextStep()" id="btn-next">Tiếp</button>
            <button type="submit" class="btn btn-success" id="btn-submit">Hoàn tất</button>
        </div>
    </form>
</div>

<script>
    let currentStep = 1;
    const totalSteps = 3;
    let chapterCount = 0;

    function showStep(step) {
        $('.step').hide();
        $('#step' + step).show();
        $('#btn-prev').toggle(step > 1);
        $('#btn-next').toggle(step < totalSteps);
        $('#btn-submit').toggle(step === totalSteps);
        $('#progressBar').css('width', (step / totalSteps * 100) + '%');
        $('#progressBar').text(`Bước ${step} / ${totalSteps}`);
    }

    function nextStep() {
        if (currentStep < totalSteps) {
            currentStep++;
            if (currentStep === 3) renderLessonsFromChapters();
            showStep(currentStep);
        }
    }

    function prevStep() {
        if (currentStep > 1) {
            currentStep--;
            showStep(currentStep);
        }
    }

    function addChapter() {
        const chapterDiv = document.createElement("div");
        chapterDiv.className = "border p-3 mb-3 chapter-item";

        const sortOrder = chapterCount + 1;

        chapterDiv.innerHTML = `
            <div class="d-flex justify-content-between align-items-center mb-2">
                <label class="fw-bold">Chương ${sortOrder}</label>
                <button type="button" class="btn btn-danger btn-sm" onclick="removeElement(this, 'chapter-item')">Xóa chương</button>
            </div>
            <input type="hidden" name="Chuongs[${chapterCount}].Id" value="0" />
            <input type="hidden" name="Chuongs[${chapterCount}].SortOrder" value="${sortOrder}" />
            <input type="text" name="Chuongs[${chapterCount}].Title" class="form-control mb-2" placeholder="Tên chương" required />
            <div class="form-control-plaintext fst-italic">→ Bài học sẽ được thêm ở bước tiếp theo</div>
        `;

        document.getElementById("chapters-container").appendChild(chapterDiv);
        chapterCount++;
    }

    function addLesson(chapterIndex) {
        const container = document.getElementById(`lessons-${chapterIndex}`);
        const lessonCount = container.querySelectorAll('.lesson-item').length;
        const sortOrder = lessonCount + 1;
        const previewId = `preview-${chapterIndex}-${lessonCount}`;

        const div = document.createElement("div");
        div.className = "lesson-item border p-2 mt-2";

        div.innerHTML = `
            <div class="d-flex justify-content-between align-items-center mb-2">
                <label class="fw-bold">Bài học ${chapterIndex + 1}.${sortOrder}</label>
                <button type="button" class="btn btn-danger btn-sm" onclick="removeElement(this, 'lesson-item')">Xóa bài học</button>
            </div>

            <input type="hidden" name="Chuongs[${chapterIndex}].Bais[${lessonCount}].Id" value="0" />
            <input type="hidden" name="Chuongs[${chapterIndex}].Bais[${lessonCount}].SortOrder" value="${sortOrder}" />
            <input type="text" name="Chuongs[${chapterIndex}].Bais[${lessonCount}].Title" class="form-control mb-1" placeholder="Tên bài học" required />

            <textarea name="Chuongs[${chapterIndex}].Bais[${lessonCount}].Description"
                class="form-control mb-1 lesson-description"
                placeholder="Mô tả bài học"
                id="lesson-desc-${chapterIndex}-${lessonCount}"></textarea>

            <div class="mb-2">
                <label class="form-label">Liên kết YouTube</label>
                <div id="youtube-links-${chapterIndex}-${lessonCount}" class="d-flex flex-column gap-2"></div>
                <button type="button" class="btn btn-sm btn-outline-primary" onclick="addYoutubeLinkToLesson(${chapterIndex}, ${lessonCount})">+ Thêm liên kết</button>
            </div>

            <div class="mb-2">
                <label class="form-label">Tải lên hình ảnh</label>
                <input type="file"
                    name="Chuongs[${chapterIndex}].Bais[${lessonCount}].ImageFiles"
                    class="form-control mb-1"
                    multiple accept="image/*"
                    onchange="previewFiles(this, '${previewId}')" />
            </div>

            <div class="mb-2">
                <label class="form-label">Tài liệu</label>
                <input type="file"
                    name="Chuongs[${chapterIndex}].Bais[${lessonCount}].DocumentFiles"
                    class="form-control mb-1"
                    multiple accept=".pdf,.doc,.docx,.xls,.xlsx,.ppt,.pptx,.txt"
                    onchange="previewFiles(this, '${previewId}')" />
            </div>

            <div id="${previewId}" class="mt-2"></div>
        `;

        container.appendChild(div);

        ClassicEditor
            .create(document.querySelector(`#lesson-desc-${chapterIndex}-${lessonCount}`))
            .catch(error => console.error(error));
    }

    function renderLessonsFromChapters() {
        const wrapper = document.getElementById("lessons-wrapper");
        wrapper.innerHTML = "";

        const chapters = document.querySelectorAll("#chapters-container .chapter-item");

        chapters.forEach((chapter, index) => {
            chapter.querySelector("input[name$='.Id']").setAttribute("name", `Chuongs[${index}].Id`);
            chapter.querySelector("input[name$='.Title']").setAttribute("name", `Chuongs[${index}].Title`);
            chapter.querySelector("input[name$='.SortOrder']").setAttribute("name", `Chuongs[${index}].SortOrder`);

            const titleInput = chapter.querySelector(`input[name='Chuongs[${index}].Title']`);
            const chapterTitle = titleInput?.value || "(Không tên)";

            const chapterSection = document.createElement("div");
            chapterSection.className = "border p-3 mb-3";
            chapterSection.innerHTML = `
                <h6>Chương ${index + 1} - <span>${chapterTitle}</span></h6>
                <div id="lessons-${index}" class="lessons-container ms-3 border-start ps-3 mt-2"></div>
                <button type="button" class="btn btn-sm btn-outline-secondary mt-2" onclick="addLesson(${index})">+ Thêm bài học</button>
            `;

            wrapper.appendChild(chapterSection);
        });
    }

    function removeElement(button, className) {
        const element = button.closest('.' + className);
        const parent = element.parentElement;
        element.remove();

        if (className === 'chapter-item') {
            updateChapterIndexes();
            renderLessonsFromChapters();
        }

        if (className === 'lesson-item') {
            updateLessonIndexes(parent);
        }
    }

    function updateChapterIndexes() {
        const chapterItems = document.querySelectorAll('.chapter-item');

        chapterItems.forEach((chapter, index) => {
            chapter.querySelector("label.fw-bold").textContent = `Chương ${index + 1}`;
            chapter.querySelector("input[name$='.Title']").setAttribute("name", `Chuongs[${index}].Title`);
            chapter.querySelector("input[name$='.Id']").setAttribute("name", `Chuongs[${index}].Id`);
            chapter.querySelector("input[name$='.SortOrder']").value = index + 1;
            chapter.querySelector("input[name$='.SortOrder']").setAttribute("name", `Chuongs[${index}].SortOrder`);
        });

        chapterCount = chapterItems.length;
    }

    function updateLessonIndexes(lessonContainer) {
        const lessonItems = lessonContainer.querySelectorAll('.lesson-item');
        const chapterIndex = parseInt(lessonContainer.id.replace('lessons-', ''), 10);

        lessonItems.forEach((lesson, index) => {
            const sortOrder = index + 1;
            const previewId = `preview-${chapterIndex}-${index}`;

            lesson.querySelector('label.fw-bold').textContent = `Bài học ${chapterIndex + 1}.${sortOrder}`;
            lesson.querySelector("input[name$='.Id']").setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].Id`);
            lesson.querySelector("input[name$='.SortOrder']").setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].SortOrder`);
            lesson.querySelector("input[name$='.Title']").setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].Title`);
            lesson.querySelector("textarea[name$='.Description']").setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].Description`);
            lesson.querySelector("input[type='url']").setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].VideoUrl`);

            const imageInput = lesson.querySelector("input[type='file'][name*='ImageFiles']");
            if (imageInput) {
                imageInput.setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].ImageFiles`);
                imageInput.setAttribute("onchange", `previewFiles(this, '${previewId}')`);
            }

            const docInput = lesson.querySelector("input[type='file'][name*='DocumentFiles']");
            if (docInput) {
                docInput.setAttribute("name", `Chuongs[${chapterIndex}].Bais[${index}].DocumentFiles`);
                docInput.setAttribute("onchange", `previewFiles(this, '${previewId}')`);
            }

            const previewDiv = lesson.querySelector("div[id^='preview-']");
            if (previewDiv) previewDiv.id = previewId;
        });
    }

    function addYoutubeLinkToLesson(chapterIndex, lessonIndex) {
        const containerId = `youtube-links-${chapterIndex}-${lessonIndex}`;
        const container = document.getElementById(containerId);

        const input = document.createElement('div');
        input.className = "input-group mb-1";

        input.innerHTML = `
            <input type="url" name="Chuongs[${chapterIndex}].Bais[${lessonIndex}].YoutubeLinks" class="form-control" placeholder="https://www.youtube.com/watch?v=..." />
            <button class="btn btn-outline-danger" type="button" onclick="this.parentElement.remove()">X</button>
        `;

        container.appendChild(input);
    }

    // $(document).ready(function () {
    //     showStep(currentStep);
    //     updateSelectedClassesDropdownText();
    //     $('.class-checkbox').on('change', updateSelectedClassesDropdownText);
    // });
</script>

<script>

        ClassicEditor
            .create(document.querySelector('#description-editor'), {
                ckfinder: {
                    uploadUrl: '/GiangVien/UploadAnhCKEditor' // endpoint upload ảnh
                },
                image: {
                    resizeUnit: '%',
                    resizeOptions: [
                        {
                            name: 'resizeImage:original',
                            label: 'Gốc',
                            value: null
                        },
                        {
                            name: 'resizeImage:75',
                            label: '75%',
                            value: '75'
                        },
                        {
                            name: 'resizeImage:50',
                            label: '50%',
                            value: '50'
                        },
                        {
                            name: 'resizeImage:25',
                            label: '25%',
                            value: '25'
                        }
                    ],
                    toolbar: [
                        'resizeImage',
                        'imageTextAlternative',
                        'imageStyle:alignLeft',
                        'imageStyle:alignCenter',
                        'imageStyle:alignRight'
                    ]
                },
                toolbar: {
                    items: [
                        'heading', '|',
                        'bold', 'italic', 'underline', 'link', '|',
                        'bulletedList', 'numberedList', '|',
                        'insertTable', 'imageUpload', 'blockQuote', '|',
                        'undo', 'redo'
                    ]
                }
            })
            .catch(error => {
                console.error(error);
            });
</script>
<script>
    document.addEventListener('paste', () => {
        setTimeout(() => {
            const editorBody = document.querySelector('.ck-content');
            if (editorBody) {
                // Chuyển đổi nhanh một số ký hiệu phổ biến
                editorBody.innerHTML = editorBody.innerHTML
                   .replace(/≤/g, '\\leq')
    .replace(/≥/g, '\\geq')
    .replace(/–/g, '-') // dấu gạch ngang dài
    .replace(/×/g, '\\times')
    .replace(/÷/g, '\\div')
    .replace(/log2/g, '\\log_2')
    .replace(/O\(n2\)/g, 'O(n^2)')
    .replace(/(\b[\w\(\)\+\-\*]+)\s*\/\s*([\w\(\)\+\-\*]+)/g, '\\frac{$1}{$2}');


                MathJax.typeset();
            }
        }, 100);
    });
</script>

<script src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>



