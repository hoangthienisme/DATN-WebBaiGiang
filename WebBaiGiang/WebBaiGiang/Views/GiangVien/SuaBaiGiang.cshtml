@* @model WebBaiGiang.Models.BaiGiangEditViewModel
@{
    Layout = null;
    ViewData["Title"] = "Chỉnh sửa toàn bộ bài giảng";
}

<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>

<div class="container mt-4">
    <h3>Chỉnh sửa toàn bộ bài giảng</h3>

    <form asp-action="SuaBaiGiang" method="post" enctype="multipart/form-data">
        <input type="hidden" asp-for="Id" />

        <div class="mb-3">
            <label asp-for="Title" class="form-label fw-bold">Tiêu đề bài giảng *</label>
            <input asp-for="Title" class="form-control" placeholder="Nhập tiêu đề bài giảng" required />
            <span asp-validation-for="Title" class="text-danger"></span>
        </div>

        <div class="mb-3">
            <label asp-for="Description" class="form-label fw-bold">Mô tả bài giảng</label>
            <textarea asp-for="Description" class="form-control" rows="3" placeholder="Mô tả bài giảng"></textarea>
        </div>

        <hr />

        <h4>Danh sách chương</h4>
        <div id="chapters-container">
            @for (int c = 0; c < Model.Chuongs.Count; c++)
            {
                <div class="border p-3 mb-4 chapter-item">
                    <div class="d-flex justify-content-between align-items-center">
                        <label class="fw-bold fs-5">Chương @(c + 1)</label>
                        <button type="button" class="btn btn-sm btn-danger" onclick="removeChapter(this)">Xóa chương</button>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Tiêu đề chương *</label>
                        <input type="text" name="Chuongs[@c].Title" value="@Model.Chuongs[c].Title" class="form-control" placeholder="Tên chương" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Mô tả chương</label>
                        <textarea name="Chuongs[@c].Description" class="form-control" rows="2">@Model.Chuongs[c].Description</textarea>
                    </div>

                    <h5>Bài học trong chương</h5>
                    <div class="lessons-container">
                        @for (int l = 0; l < Model.Chuongs[c].Bais.Count; l++)
                        {
                            <div class="border p-2 mb-2 lesson-item">
                                <div class="d-flex justify-content-between align-items-center">
                                    <label class="fw-bold">Bài học @(l + 1)</label>
                                    <button type="button" class="btn btn-sm btn-danger" onclick="removeLesson(this)">Xóa bài học</button>
                                </div>

                                <div class="mb-2">
                                    <label class="form-label">Tiêu đề bài học *</label>
                                    <input type="text" name="Chuongs[@c].Bais[@l].Title" value="@Model.Chuongs[c].Bais[l].Title" class="form-control" placeholder="Tên bài học" required />
                                </div>

                                <div class="mb-2">
                                    <label class="form-label">Nội dung bài học</label>
                                    <textarea name="Chuongs[@c].Bais[@l].Content" class="form-control" rows="3">@Model.Chuongs[c].Bais[l].Content</textarea>
                                </div>

                                <div class="mb-2">
                                    <label class="form-label">Tài liệu đính kèm</label>
                                    <input type="file" name="Chuongs[@c].Bais[@l].Attachment" class="form-control" />
                                    @if (!string.IsNullOrEmpty(Model.Chuongs[c].Bais[l].AttachmentFileName))
                                    {
                                        <small class="text-muted">File hiện tại: @Model.Chuongs[c].Bais[l].AttachmentFileName</small>
                                    }
                                </div>
                            </div>
                        }
                        <button type="button" class="btn btn-outline-primary btn-sm mb-3" onclick="addLesson(this)">+ Thêm bài học</button>
                    </div>
                </div>
            }
        </div>

        <button type="button" class="btn btn-outline-success mb-4" onclick="addChapter()">+ Thêm chương</button>

        <div class="mt-4">
            <button type="submit" class="btn btn-primary">Lưu toàn bộ bài giảng</button>
        </div>
    </form>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}

<script>
    let chapterCount = @Model.Chuongs.Count;

    function addChapter() {
        const container = document.getElementById("chapters-container");
        const c = chapterCount++;
        const chapterDiv = document.createElement("div");
        chapterDiv.classList.add("border", "p-3", "mb-4", "chapter-item");
        chapterDiv.innerHTML = `
            <div class="d-flex justify-content-between align-items-center">
                <label class="fw-bold fs-5">Chương ${c + 1}</label>
                <button type="button" class="btn btn-sm btn-danger" onclick="removeChapter(this)">Xóa chương</button>
            </div>

            <div class="mb-3">
                <label class="form-label">Tiêu đề chương *</label>
                <input type="text" name="Chuongs[${c}].Title" class="form-control" placeholder="Tên chương" required />
            </div>

            <div class="mb-3">
                <label class="form-label">Mô tả chương</label>
                <textarea name="Chuongs[${c}].Description" class="form-control" rows="2"></textarea>
            </div>

            <h5>Bài học trong chương</h5>
            <div class="lessons-container"></div>

            <button type="button" class="btn btn-outline-primary btn-sm mb-3" onclick="addLesson(this)">+ Thêm bài học</button>
        `;
        container.appendChild(chapterDiv);
    }

    function removeChapter(btn) {
        btn.closest(".chapter-item").remove();
        updateChapterLabels();
    }

    function updateChapterLabels() {
        const chapters = document.querySelectorAll("#chapters-container .chapter-item");
        chapters.forEach((chapter, i) => {
            chapter.querySelector("label.fw-bold").textContent = `Chương ${i + 1}`;
            chapter.querySelectorAll("input, textarea").forEach(input => {
                if (input.name) {
                    input.name = input.name.replace(/Chuongs\[\d+\]/, `Chuongs[${i}]`);
                }
            });
            // Cập nhật lesson name index bên trong mỗi chương
            const lessons = chapter.querySelectorAll(".lesson-item");
            lessons.forEach((lesson, j) => {
                lesson.querySelectorAll("input, textarea").forEach(input => {
                    if (input.name) {
                        input.name = input.name.replace(/Chuongs\[\d+\]\.Bais\[\d+\]/, `Chuongs[${i}].Bais[${j}]`);
                    }
                });
                lesson.querySelector("label.fw-bold").textContent = `Bài học ${j + 1}`;
            });
        });
        chapterCount = chapters.length;
    }

    function addLesson(btn) {
        const lessonsContainer = btn.parentElement.querySelector(".lessons-container");
        const chapterDiv = btn.closest(".chapter-item");
        const cIndex = Array.from(chapterDiv.parentElement.children).indexOf(chapterDiv);

        const lessons = lessonsContainer.querySelectorAll(".lesson-item");
        const lIndex = lessons.length;

        const lessonDiv = document.createElement("div");
        lessonDiv.classList.add("border", "p-2", "mb-2", "lesson-item");
        lessonDiv.innerHTML = `
            <div class="d-flex justify-content-between align-items-center">
                <label class="fw-bold">Bài học ${lIndex + 1}</label>
                <button type="button" class="btn btn-sm btn-danger" onclick="removeLesson(this)">Xóa bài học</button>
            </div>

            <div class="mb-2">
                <label class="form-label">Tiêu đề bài học *</label>
                <input type="text" name="Chuongs[${cIndex}].Bais[${lIndex}].Title" class="form-control" placeholder="Tên bài học" required />
            </div>

            <div class="mb-2">
                <label class="form-label">Nội dung bài học</label>
                <textarea name="Chuongs[${cIndex}].Bais[${lIndex}].Content" class="form-control" rows="3"></textarea>
            </div>

            <div class="mb-2">
                <label class="form-label">Tài liệu đính kèm</label>
                <input type="file" name="Chuongs[${cIndex}].Bais[${lIndex}].Attachment" class="form-control" />
            </div>
        `;
        lessonsContainer.appendChild(lessonDiv);
    }

    function removeLesson(btn) {
        const lessonDiv = btn.closest(".lesson-item");
        const lessonsContainer = lessonDiv.parentElement;
        lessonDiv.remove();

        // Cập nhật số thứ tự bài học và name input trong chương đó
        const lessons = lessonsContainer.querySelectorAll(".lesson-item");
        lessons.forEach((lesson, i) => {
            lesson.querySelector("label.fw-bold").textContent = `Bài học ${i + 1}`;
            lesson.querySelectorAll("input, textarea").forEach(input => {
                if (input.name) {
                    input.name = input.name.replace(/Chuongs\[\d+\]\.Bais\[\d+\]/, (match) => {
                        const chapterIndex = Array.from(lessonsContainer.parentElement.parentElement.children).indexOf(lessonsContainer.parentElement);
                        return `Chuongs[${chapterIndex}].Bais[${i}]`;
                    });
                }
            });
        });
    }
</script>
 *@