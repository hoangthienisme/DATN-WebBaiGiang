@using WebBaiGiang.ViewModel
@model PhanTrang<WebBaiGiang.Models.LopHoc>

@{
    Layout = "~/Views/Shared/_LayoutGiangvien.cshtml";
    ViewBag.Title = "Lớp học đã lưu trữ";
}

<link href="~/css/courses.css" rel="stylesheet" />
<link href="~/css/pagination.css" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    .course-dropdown {
        position: absolute;
        top: 0;
        right: 0;
        margin: 8px;
        z-index: 1000;
    }

    .dropdown-toggle {
        background: none;
        border: none;
        color: white;
        font-size: 1.25rem;
        cursor: pointer;
        padding: 0;
    }

    .dropdown-menu {
        display: none;
        position: absolute;
        top: 100%;
        right: 0;
        background: white;
        border: 1px solid #ddd;
        border-radius: 4px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.2);
        min-width: 120px;
        z-index: 1001;
    }

        .dropdown-menu.show {
            display: block;
        }

    .dropdown-item {
        padding: 8px 12px;
        color: #333;
        font-size: 14px;
        text-decoration: none;
    }

        .dropdown-item:hover {
            background: #f0f0f0;
        }

    .dropdown-item-unarchive {
        color: green;
    }
</style>

<div class="conTent">
    <h3>Lớp học đã lưu trữ</h3>
</div>

<div class="container">
    <!-- Bộ lọc tìm kiếm -->
    <div class="search-filter d-flex align-items-center justify-content-between mb-3">
        <form asp-action="ArchivedCourses" method="get" class="d-flex align-items-center gap-2 w-100">
            <img src="~/img/loupe.png" class="search-icon" style="width:18px; height:18px; opacity:0.6;" />
            <input type="text" name="search" value="@ViewBag.Search" placeholder="Tìm lớp học..." class="form-control w-50" />

            <select name="SubjectsId" class="form-select w-auto" onchange="this.form.submit()">
                <option value="">-- Tất cả học phần --</option>
                @foreach (var hp in (List<WebBaiGiang.Models.HocPhan>)ViewBag.HocPhans)
                {
                    <option value="@hp.Id" selected="@(hp.Id == (ViewBag.SubjectsId ?? 0) ? "selected" : null)">
                        @hp.Name
                    </option>
                }
            </select>

            <button type="submit" class="btn btn-secondary">Lọc</button>
        </form>
    </div>

    <div class="courses-wrapper">
        @if (Model != null && Model.Any())
        {
            foreach (var course in Model)
            {
                <div class="course-card position-relative">
                    <div class="course-dropdown">
                        <button class="btn btn-link text-white p-0" type="button" onclick="toggleCourseDropdown(this)">
                            <i class="bi bi-three-dots-vertical fs-5"></i>
                        </button>
                        <div class="dropdown-menu">
                            <a class="dropdown-item" asp-controller="Courses" asp-action="DetailCourses" asp-route-id="@course.Id">Xem chi tiết</a>
                            <a class="dropdown-item dropdown-item-unarchive" onclick="showConfirmArchiveModal(@course.Id)">Khôi phục</a>
                        </div>
                    </div>

                    <div class="course-image">
                        <img src="@course.Picture" alt="Ảnh bìa lớp học" />
                    </div>
                    <div class="course-content">
                        <h4>@course.Name</h4>
                        @Html.Raw(course.Description)
                    </div>
                </div>
            }
        }
        else
        {
            <p>Không có lớp học nào đã lưu trữ.</p>
        }
    </div>
    @await Html.PartialAsync("_ConfirmModal", new ConfirmModalViewModel
{
    ModalId = "confirmArchiveModal",
    Message = "Bạn có chắc khôi phục lớp học này?",
    ActionUrl = Url.Action("UnarchiveCourse", "GiangVien"),
    DataId = 0 
})
    <div class="pagination">
        @if (Model.TotalPages > 1)
        {
            <ul class="pagination-list">
                @if (Model.HasPreviousPage)
                {
                    <li><a href="@Url.Action("ArchivedCourses", new { page = Model.PageIndex - 1 })">← Trước</a></li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    if (i == Model.PageIndex)
                    {
                        <li class="active">@i</li>
                    }
                    else
                    {
                        <li><a href="@Url.Action("ArchivedCourses", new { page = i })">@i</a></li>
                    }
                }
                @if (Model.HasNextPage)
                {
                    <li><a href="@Url.Action("ArchivedCourses", new { page = Model.PageIndex + 1 })">Sau →</a></li>
                }
            </ul>
        }
    </div>
</div>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script>
    function toggleCourseDropdown(button) {
        const menu = button.parentElement.querySelector('.dropdown-menu');
        const isShown = menu.classList.contains("show");

        document.querySelectorAll(".dropdown-menu.show").forEach(m => m.classList.remove("show"));

        if (!isShown) {
            menu.classList.add("show");
        }
    }

    document.addEventListener("click", function (e) {
        const courseDropdowns = document.querySelectorAll('.course-dropdown');
        let inside = false;
        courseDropdowns.forEach(dropdown => {
            if (dropdown.contains(e.target)) inside = true;
        });
        if (!inside) {
            document.querySelectorAll(".dropdown-menu.show").forEach(m => m.classList.remove("show"));
        }
    });


     function showConfirmArchiveModal(courseId) {
        const modal = document.getElementById("confirmArchiveModal");
        const input = modal.querySelector("input[name='id']");
        input.value = courseId;
        modal.classList.add("show");

        modal.addEventListener("click", function (e) {
            if (e.target === modal) modal.classList.remove("show");
        });

        modal.querySelector(".cancel-btn").addEventListener("click", function () {
            modal.classList.remove("show");
        });
    }
</script>
