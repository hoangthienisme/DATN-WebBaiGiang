@model WebBaiGiang.ViewModel.ChiTietBaiGiangViewModel
@using System.Security.Claims
@{
    ViewData["Title"] = "Chi tiết bài giảng";
    var currentUserRole = User.Claims.FirstOrDefault(c => c.Type == ClaimTypes.Role || c.Type == "Role")?.Value;
    Layout = "~/Views/Shared/_LayoutSinhvien.cshtml";
    var taiNguyenAnh = Model.TaiNguyens?.Where(t => t.Loai == "image");
    var taiNguyenYoutube = Model.TaiNguyens?.Where(t => t.Loai == "youtube");
    var taiNguyenDocs = Model.TaiNguyens?.Where(t => t.Loai == "tailieu");
    var currentUserIdString = User.FindFirstValue(ClaimTypes.NameIdentifier);
    int currentUserId = 0;
    if (!string.IsNullOrEmpty(currentUserIdString))
    {
        int.TryParse(currentUserIdString, out currentUserId);
    }
}
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
<link href="~/css/chitietbaigiang.css" rel="stylesheet" />
<div class="container mt-4" style="max-width: 1200px;">
    <!-- Header Section -->
    <div class="row mb-4">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-primary text-white">
                    <h2 class="card-title mb-0">
                        <i class="fas fa-book-open me-2"></i>
                        @Model.Title
                    </h2>
                </div>
                <div class="card-body">
                    <p class="lead text-muted">@Model.Description</p>
                </div>
            </div>
        </div>
    </div>

    <!-- Accordion lazy chapters -->
    <div class="row mb-5">
        <div class="col-12">
            <div class="card shadow-sm">
                <div class="card-header bg-success text-white">
                    <h4 class="mb-0">
                        <i class="fas fa-list-ol me-2"></i>
                        Nội dung bài giảng
                    </h4>
                </div>
                <div class="card-body">
                    @if (Model.Chuongs?.Any() == true)
                    {
                        <div class="accordion" id="chaptersAccordion">
                            @foreach (var chuong in Model.Chuongs.OrderBy(c => c.SortOrder))
                            {
                                <div class="accordion-item">
                                    <h2 class="accordion-header" id="heading-@chuong.Id">
                                        <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapse-@chuong.Id">
                                            <strong>Chương @chuong.SortOrder: @chuong.Title</strong>
                                        </button>
                                    </h2>
                                    <div id="collapse-@chuong.Id" class="accordion-collapse collapse" data-bs-parent="#chaptersAccordion">
                                        <div class="accordion-body">
                                            <div class="text-center text-muted py-3">Đang tải dữ liệu...</div>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="text-center text-muted py-5">
                            <i class="fas fa-book fa-3x mb-3"></i>
                            <h5>Chưa có nội dung</h5>
                            <p>Bài giảng này chưa có chương nào được thêm vào.</p>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>

    @await Html.PartialAsync("_TaiNguyenTongHop", new WebBaiGiang.ViewModel.TaiNguyenTongHopViewModel
{
    Anh = taiNguyenAnh?.ToList(),
    Docs = taiNguyenDocs?.ToList(),
    YouTube = taiNguyenYoutube?.ToList()
})

    @await Html.PartialAsync("_BinhLuan", new WebBaiGiang.ViewModel.BinhLuanViewModel
{
    BinhLuans = Model.BinhLuans,
    BaiGiangId = Model.BaiGiang.Id,
    CurrentUserId = currentUserId,
    CurrentUserRole = currentUserRole
})
</div>


<script>
    // Lazy load nội dung chương
    document.addEventListener("DOMContentLoaded", function () {
        const accordion = document.getElementById("chaptersAccordion");
        if (accordion) {
            accordion.addEventListener("show.bs.collapse", async function (e) {
                const collapseId = e.target.id;
                const chuongId = collapseId.split("-")[1];
                const body = document.querySelector(`#${collapseId} .accordion-body`);

                if (body && !body.dataset.loaded) {
                    try {
                        const response = await fetch(`/SinhVien/LoadBaiByChuong?chuongId=${chuongId}`);
                        const html = await response.text();
                        body.innerHTML = html;
                        body.dataset.loaded = "true";
                    } catch (error) {
                        body.innerHTML = `<div class="text-danger">Lỗi khi tải dữ liệu.</div>`;
                    }
                }
            });
        }
    });
        document.getElementById("chaptersAccordion")?.addEventListener("show.bs.collapse", async function (e) {
        const collapseId = e.target.id;
        const chuongId = collapseId.split("-")[1];
        const body = document.querySelector(`#${collapseId} .accordion-body`);

        if (body && !body.dataset.loaded) {
            body.innerHTML = '<div class="text-center py-3 text-muted">Đang tải dữ liệu...</div>';
            const response = await fetch(`/SinhVien/LoadBaiByChuong?chuongId=${chuongId}`);
            const html = await response.text();
            body.innerHTML = html;
            body.dataset.loaded = "true";
        }
    });

</script>


